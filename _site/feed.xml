<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-09-07T02:56:43+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">SungJoon’s Portfolio</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">세종창의학기제 Ⅲ,Ⅳ</title><link href="http://localhost:4000/project/2019/09/06/BookPrice/" rel="alternate" type="text/html" title="세종창의학기제 Ⅲ,Ⅳ" /><published>2019-09-06T21:10:00+09:00</published><updated>2019-09-06T21:10:00+09:00</updated><id>http://localhost:4000/project/2019/09/06/BookPrice</id><content type="html" xml:base="http://localhost:4000/project/2019/09/06/BookPrice/">&lt;p&gt;머신러닝을 통한 중고책 거래가 자동측정 모듈 구축&lt;/p&gt;

&lt;h2 id=&quot;작성중&quot;&gt;작성중..&lt;/h2&gt;</content><author><name></name></author><category term="project" /><summary type="html">머신러닝을 통한 중고책 거래가 자동측정 모듈 구축</summary></entry><entry><title type="html">CapStone Design(산학협력프로젝트)</title><link href="http://localhost:4000/project/2019/09/06/ClassicBook/" rel="alternate" type="text/html" title="CapStone Design(산학협력프로젝트)" /><published>2019-09-06T21:00:00+09:00</published><updated>2019-09-06T21:00:00+09:00</updated><id>http://localhost:4000/project/2019/09/06/ClassicBook</id><content type="html" xml:base="http://localhost:4000/project/2019/09/06/ClassicBook/">&lt;p&gt;세종대학교 SW융합대학 주관 캡스톤 디자인 산학협력 프로젝트&lt;/p&gt;

&lt;h2 id=&quot;member&quot;&gt;Member&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;이름&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;역할&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서성준&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Android App 개발 &amp;amp; AWS 구축&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;남기범&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;IOS App 개발 &amp;amp; Back-end 구축&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;김신욱&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DB 구축 &amp;amp; Android App 개발&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;유경수&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Back-end 구축&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;environment&quot;&gt;Environment&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Language&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;back-end&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DB&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Java / Swift / Javascript&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AWS EC2 Linux / Node.js / Express.js / Phantom.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;MySQL&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;개발-목표&quot;&gt;개발 목표&lt;/h3&gt;

&lt;p&gt;세종대학교 고전독서시스템에 대한 현 상황으로써,&lt;/p&gt;

&lt;p&gt;-웹사이트로만 구현 되어 있는 대양 휴머니티 사이트 접속의 불편하다는 점과 사이트의 존재조차 학생들이 모른다는 점&lt;/p&gt;

&lt;p&gt;-시험 예약의 번거로움과 시험에 대한 no show&lt;/p&gt;

&lt;p&gt;-고전독서 관리 페이지와 도서대여 홈페이지가 독립적으로 운행되어서 인증 관리와 도서 대여가 한 페이지에서 이루어지지 않아 번거로움을 초래 한다는 것.&lt;/p&gt;

&lt;p&gt;또한, 세종대 학생이라면 필수적으로 거쳐야할 고전독서 인증제에 대하여 학생들에게 설문조사를 실시하였고, 결과는 많은 학생들이 인증제가 있다는 것은 인지하고 있지만, 대양휴머니티 칼리지 사이트에서 운영하고 있다는 사실은 응답자 중 절반이 모르는 상황이었다.&lt;/p&gt;

&lt;p&gt;이에 따라, 학생들의 실용성과 편의성 향상을 위하여 사용자의 고전 독서 인증 정보를 확인 할 수 있는 기능과 시험 1시간 전 알림 기능 그리고 어플리케이션을 통한 고전 독서 인증 시험 예약 기능, 마지막으로 학술정보원 도서 검색 기능 등 사용자 요구사항을 최대한 반영한 어플리케이션을 만드는 것이 목표다.&lt;/p&gt;

&lt;h3 id=&quot;설계-사양서&quot;&gt;설계 사양서&lt;/h3&gt;

&lt;h2 id=&quot;1프로젝트-방향&quot;&gt;1.프로젝트 방향&lt;/h2&gt;

&lt;p&gt;해당 프로젝트는 세종대 학생들의 고전독서 관리를 위한 어플리케이션이다.&lt;/p&gt;

&lt;h2 id=&quot;2use-case-diagram--class-diagram&quot;&gt;2.Use-Case Diagram &amp;amp; Class Diagram&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Use-Case&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ClassicBook/use-case.png&quot; alt=&quot;use-case&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Class Diagram&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ClassicBook/class-diagram.png&quot; alt=&quot;class-diagram&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3내용-구성&quot;&gt;3.내용 구성&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ClassicBook/sample1.PNG&quot; alt=&quot;내용1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ClassicBook/sample2.PNG&quot; alt=&quot;내용2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4구현-설명&quot;&gt;4.구현 설명&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ClassicBook/sys-arch.PNG&quot; alt=&quot;시스템구성&quot; /&gt;&lt;/p&gt;

&lt;p&gt;NPM 모듈인 Phantomjs라는 것을 사용해 현재 운행되고 있는 대양휴머니티 칼리지 웹 사이트에 실제로 로그인할 수 있도록 연동하였다.&lt;/p&gt;

&lt;p&gt;어플리케이션에서 입력된 학번과 비밀번호를 서버에 전송하여 Phantomjs를 통해 로그인 정보가 일치하는지 아닌지 판별하고, 일치할 경우 사용자의 고전독서 인증 정보를 크롤링해와서 자료를 어플리케이션으로 전송한다.&lt;/p&gt;

&lt;p&gt;독서당 시험 예약의 경우, 서버에서 MySQL을 연동하여 자체적인 데이터를 구축해서 구현하였다. 사용자가 예약정보를 서버로 전송하면 DataBase에 저장된다.&lt;/p&gt;

&lt;p&gt;독서당 시험 1시간 전 알림은 예약한 시험 예약 정보를 기반으로 1시간 전 알림을 구현했다. 자체적인 라이브러리를 사용하여 정해진 시간이 되면 알림이 온다.&lt;/p&gt;

&lt;p&gt;학술정보원 고전독서 검색 기능은 학술정보원 웹 페이지에서 ISBN으로 검색한 결과를 크롤링하여 구현하게 되었다.&lt;/p&gt;

&lt;h3 id=&quot;android--linux&quot;&gt;Android + Linux&lt;/h3&gt;

&lt;h2 id=&quot;자동-로그인&quot;&gt;자동 로그인&lt;/h2&gt;

&lt;p&gt;SharedPreferences를 이용하여 자동로그인을 구현하였습니다. 본 어플 사용 특성상, 사용자B가 사용자A의 스마트폰에서 로그인하는 경우는 없다고 판단하여 본 메소드를 적용하였습니다.&lt;/p&gt;

&lt;p&gt;본 로그인은, phantom.js가 구동되고 있는 AWS EC2 서버에 ID와 PW를 요청하면 phantom.js가 실제 웹사이트에 접속하여 로그인을 한 뒤, 원하는 정보를 파싱하여 클라이언트에 전송해 주는 방식입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;//자동로그인 정보 저장&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PreferenceManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDefaultSharedPreferences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ID&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;null&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auPW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PW&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;null&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//자동로그인시 바로 로그인 시도&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;auto_login&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;autoLogin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setChecked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;login info : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auPW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text_pw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auPW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loginURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loginID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loginPW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auPW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LoginTask&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loginTask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoginTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loginTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;자동로그인 체크박스에 체크를 하고 로그인 시도를 하게 되면 로그인을 시도한 시점의 ID와 PW를 저장합니다.
이후 어플리케이션 재실행 시 자동로그인을 시도한 기록이 있기 때문에 이전 로그인했던 ID와 PW를 불러와 자동으로 로그인을 시도합니다.&lt;/p&gt;

&lt;p&gt;로그인을 하는 과정은 서버와 비동기 통신을 해야 하는 과정이기 때문에 AsyncTask를 사용하였습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoginTask&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AsyncTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SweetAlertDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SweetAlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoginActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SweetAlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PROGRESS_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContentValues&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoginTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContentValues&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPreExecute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//..login progress bar&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;RequestHttpURLConnection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestHttpURLConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestHttpURLConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestHttpURLConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;turl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPostExecute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dismiss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onPostExecute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;JsonParser&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonParser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;JSONParser&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsglobal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JSONParser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//..setting parse data&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsglobal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStat_auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsglobal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStat_auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//..setting parse data&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//..setting parse data&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsglobal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SweetAlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoginActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SweetAlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ERROR_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitleText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;오류&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContentText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ID와 PW를 확인해 주세요&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoginActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NullPointerException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SweetAlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoginActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SweetAlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ERROR_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitleText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;오류&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContentText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;서버와의 통신이 원활하지 않습니다. \n다시 시도해 주세요&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;로그인성공 후 서버에서 파싱해온 고전독서 인증정보들은 전역 클래스에 별도로 저장됩니다. 이 데이터들은 어플리케이션 종료 시 삭제됩니다.&lt;/p&gt;

&lt;h2 id=&quot;recyclerview&quot;&gt;RecyclerView&lt;/h2&gt;

&lt;p&gt;안드로이드 UI구성은 BottomNavigationView로 구성되었으며, 각각의 Fragment에 RecyclerView를 동적으로 적용하여 스크롤이 가능하도록 하였습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RecyclerAdapter_Setting&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Adapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecyclerAdapter_Setting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ItemViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// adapter에 들어갈 list&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data_Recycle_Setting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listData1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ItemViewHolder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// LayoutInflater를 이용하여 전 단계에서 만들었던 item.xml을 inflate 시킵니다.&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// return 인자는 ViewHolder 입니다.&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LayoutInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;recycle_settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ItemViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ItemViewHolder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;holder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;holder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onBind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listData1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//TO DO&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data_Recycle_Setting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//TO DO&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// RecyclerView의 핵심인 ViewHolder 입니다.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 여기서 subView를 setting 해줍니다.&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ItemViewHolder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//TO DO&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;alarm-with-oreo&quot;&gt;Alarm (with Oreo)&lt;/h2&gt;

&lt;p&gt;안드로이드 버전이 8.0으로 넘어가면서, 기존 사용하던 기타 여러 가지 기능들이 더이상 사용할 수 없거나, 다른 방법을 찾아야 하는 경우가 생겼습니다. 그 중 알람기능인 Notification Channel 에 대한 대응책을 마련해야 하는 상황이었습니다.&lt;/p&gt;

&lt;p&gt;안드로이드 OS 8.0부터는 별도의 Notification Channel을 만들어주어야 하며 createNotificationChannel()을 호출해주면 됩니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SDK_INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION_CODES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;importance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NotificationManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IMPORTANCE_HIGH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NotificationChannel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notificationChannel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NotificationChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channelId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;channelName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;importance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;notificationManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createNotificationChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notificationChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이렇게 설정해 두면 선택한 시간에 상단바 Notification이 울립니다.&lt;/p&gt;

&lt;h2 id=&quot;aws&quot;&gt;AWS&lt;/h2&gt;

&lt;p&gt;AWS EC2 학생 프리티어 12개월을 이용하여, AWS Linux서버를 구축하였습니다.&lt;/p&gt;

&lt;p&gt;서버를 구축한 뒤, Elastic IP를 할당받아 고정IP를 부여받았습니다.&lt;/p&gt;

&lt;p&gt;AWS Linux 내에서 Node.js파일을 24시간 가동하기 위하여 forever모듈을 설치하였습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-linux&quot; data-lang=&quot;linux&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;$ npm install forever -g
$ forever start app.js&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;하지만 구동 약 15시간 뒤에 알 수 없는 Crash로 인하여 forever는 구동되고 있으나 runtime error가 발생하는 증상을 보였습니다.&lt;/p&gt;

&lt;p&gt;이는 Node.js 코드 내의 url이 main.js를 시작시키고 정상적으로 휴무상태에 들어가야 하지만, forever는 휴무상태 없이 그대로 돌고 있기 때문에, 자원낭비를 계속하게 되고 결국은 코드가 죽어버리는 현상이 발생하는 것이었습니다.&lt;/p&gt;

&lt;p&gt;따라서, 다른 자원 관리 모듈인 pm2를 설치하였으며, 그 후 아무런 문제 없이 정상 작동하였습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-linux&quot; data-lang=&quot;linux&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;$ npm install pm2 -g
$ pm2 start app.js&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="project" /><summary type="html">세종대학교 SW융합대학 주관 캡스톤 디자인 산학협력 프로젝트</summary></entry><entry><title type="html">그들의 은밀한 사생활 ICT 공모전</title><link href="http://localhost:4000/project/2019/09/06/ICT/" rel="alternate" type="text/html" title="그들의 은밀한 사생활 ICT 공모전" /><published>2019-09-06T20:01:00+09:00</published><updated>2019-09-06T20:01:00+09:00</updated><id>http://localhost:4000/project/2019/09/06/ICT</id><content type="html" xml:base="http://localhost:4000/project/2019/09/06/ICT/">&lt;h2 id=&quot;세종대학교-ict-아이디어-공모전&quot;&gt;세종대학교 ICT 아이디어 공모전&lt;/h2&gt;

&lt;p&gt;과거의 인물이 되어 타임머신을 타고 현재로 온다면, 어떤 기술이 필요할지, 그에 맞는 기술을 찾아 논리적으로 서술한다.&lt;/p&gt;

&lt;h2 id=&quot;member&quot;&gt;MEMBER&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;이름&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;역할&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서성준&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;자료조사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;임동혁&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Drone시연&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;김신욱&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AUTOCAD 디자인&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이중혁&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;자료조사&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;주제-시나리오-공모전을-위한-주제-시나리오-제작&quot;&gt;주제 시나리오 (공모전을 위한 주제 시나리오 제작)&lt;/h2&gt;

&lt;p&gt;저는 조선시대에 살고 있는 지리학자 고산자 김정호 입니다. 저는 사실 운동을 싫어합니다. 겨울에 따듯한 아랫목에서 귤까먹는 것을 제일 좋아합니다. 밖에 나가서 걷고, 등산을하고, 강을 건너는 일을 사실 진심으로 싫어합니다.&lt;/p&gt;

&lt;p&gt;하지만 정확한 대한민국의 지도를 만들기 위해서는 직접 일일이 발로 뛰어다니며 직접 지리를 확인하고 지도를 제작하여야 합니다. 그래서 그런지 지도제작 속도가 지지부진해지고 점점 지도에 대한 흥미가 떨어집니다. 발길이 닿기 힘든 곳은 정확하게 측정을 할 수 없기 때문에, 잘못된 지리 정보도 있습니다.&lt;/p&gt;

&lt;p&gt;이런 상황에서 만약에 제가(김정호) 오늘날의 기술을 사용할 수 있다면, 편한 건물 안에서 VR카메라가 부착된 드론을 이용하여 편하게 촬영을 하고, 직접 VR로 실사를 보면서 정확한 지리정보가 들어간 지도를 제작할 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;주제-목표-및-기대효과&quot;&gt;주제 목표 및 기대효과&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;드론을 이용하여 한반도 전체 지형지도(대동여지도)를 더 편리하게 제작할 수 있다.
드론에 부착된 VR카메라를 이용해 직접 지형을 찾아가서 기록했던 불편함을 덜 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;주제-필요성-및-배경&quot;&gt;주제 필요성 및 배경&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;지도가 없던 당시 시민들의 불편함을 덜어주고 한반도의 지형을 한눈에 알 수 있다.
산이나 계곡 등 사람이 접근하기 위험한 곳을 드론이 대신 세밀하게 촬영하여 위험을 덜 수 있다.
직접 도보로 걸어가는 것 대신 드론을 통하여 더 빠르고 정확하게 지도제작을 할 수 있다.
3D Mapping 기술을 이용하여 한반도 지형을 한눈에 파악할 수 있다.
VR기술을 이용하여 3D로 표현된 한반도 지형을 좀 더세밀하게 기록할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;제품-설명&quot;&gt;제품 설명&lt;/h3&gt;

&lt;h2 id=&quot;vr드론&quot;&gt;VR드론&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ICT/vrdrone.PNG&quot; alt=&quot;VR드론&quot; /&gt;&lt;/p&gt;

&lt;p&gt;vr로 사용자가 드론이 보는 시야를 직접 눈앞에서 보듯 체험할 수 있으며 내장되어 있는 3D맵핑 기능을 통해서 지도를 구현할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;예시화면&quot;&gt;예시화면&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ICT/example.PNG&quot; alt=&quot;예시&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;기술-설명&quot;&gt;기술 설명&lt;/h2&gt;

&lt;p&gt;1.촬영용 드론&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ICT/dronecad.PNG&quot; alt=&quot;설계도&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CAD를 이용한 가상의 VR드론 설계도&lt;/p&gt;

&lt;p&gt;VR 드론은 드론에 장착된 카메라가 촬영한 영상을 드론 조종자가 쓴 헤드셋에 실시간으로 전송하는 형태다. 이를 통해 드론 조종자는 인간의 시점으로는 볼 수 없는 각종 풍경을 즐길 수 있을 뿐만 아니라 흡사 자신이 하늘을 나는 듯한 느낌까지 얻는다. 충분한 비행 시간 을 가지는 고용량 배터리 드론이 매달고 이륙할 수 있을 정도로 작고 가벼운 고화질의 카메라 흔들림과 진동이 없는 안정적인 화면을 위한 중심 교정 장치인 짐벌이 필요하다.&lt;/p&gt;

&lt;p&gt;2.VR 기술&lt;/p&gt;

&lt;p&gt;VR은 인간의 모든 감각을 사용하여, 실제처럼 느낄 수 있는 통합된 경험을 지칭한다. 즉, Hologram, VR 및 AR 등 기술적으로 구분되는 모든 것들이 사실상 VR인 것이다. 이러한 VR을 시장에서는 구현 기술에 따라 VE(Virtual Environment), AR(AugmentedReality), AV(Augmented Virtuality), SR(Substitutional Reality) 및 MR(Mixed Reality) 등으로 구분하기도 한다.&lt;/p&gt;

&lt;p&gt;3.3D맵핑 기술&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ICT/3dmapping.PNG&quot; alt=&quot;3D맵핑기술&quot; /&gt;&lt;/p&gt;

&lt;p&gt;라이브 드론맵 접근이 불가능한 지역에 드론을 띄워 지도를 구축하고 이를 실시간으로 확인할 수 있는 기술이다. 현장에 띄워진 드론을 통해 공간정보를 취득해 전송하면 자동 매핑(mapping)해 멀리 떨어진 곳에서도 실시간으로 현장을 확인 가능하다.&lt;/p&gt;

&lt;p&gt;우선 고정밀 위치센서를 부착한 드론이 지정경로를 따라 자동 비행(약 5㎞)하면서 촬영한 영상과 센서 정보를 전송하면, ‘드론 기반 자동지도구축 통합 소프트웨어(SW)’가 정보를 보정해 공간정보를 생성한다. 이렇게 생성된 공간정보를 3차원(3D)으로 가시화해 사용자가 지역상황을 실시간으로 파악할 수 있게 된다.&lt;/p&gt;

&lt;h3 id=&quot;성과&quot;&gt;성과&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/ICT/ictawards.PNG&quot; alt=&quot;성과&quot; /&gt;&lt;/p&gt;

&lt;p&gt;명확한 주제를 가지고 제출한 아이디어가 본 공모전에서 최우수상을 수상하였습니다.&lt;/p&gt;

&lt;h2 id=&quot;contact&quot;&gt;Contact&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;email : seojj95@naver.com&lt;/p&gt;

  &lt;p&gt;by 서성준, 임동혁, 김신욱, 이중혁&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="project" /><summary type="html">세종대학교 ICT 아이디어 공모전</summary></entry><entry><title type="html">세종창의학기제 I,Ⅱ</title><link href="http://localhost:4000/project/2019/09/06/GISApp/" rel="alternate" type="text/html" title="세종창의학기제 I,Ⅱ" /><published>2019-09-06T20:00:00+09:00</published><updated>2019-09-06T20:00:00+09:00</updated><id>http://localhost:4000/project/2019/09/06/GISApp</id><content type="html" xml:base="http://localhost:4000/project/2019/09/06/GISApp/">&lt;p&gt;GIS를 이용한 N명의 중간위치 측정 어플리케이션&lt;/p&gt;

&lt;h2 id=&quot;member&quot;&gt;MEMBER&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;이름&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;역할&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서성준&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Android App 개발&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;남기범&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;IOS App 개발&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;천슬별&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Hybrid App 개발&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;고정민&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;UI/UX 디자인&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;environment&quot;&gt;ENVIRONMENT&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Language&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Library&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;API&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Tool&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Java / HTML5 / CSS3 / Javascript / Swift&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;JQuery / MDL / BootStrap&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;GoogleMapsAPI / GooglePlacesAPI&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Xcode / Android Studio / Adobe illustrator / VS Code&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;기획&quot;&gt;기획&lt;/h2&gt;

&lt;h3 id=&quot;n명의-사람들이-모이는-중간지점을-찾아주자&quot;&gt;N명의 사람들이 모이는 “중간지점”을 찾아주자&lt;/h3&gt;

&lt;p&gt;다른 지역에 살고 있는 N명의 사람들이 약속을 잡을 때,&lt;/p&gt;

&lt;p&gt;약속 장소를 각각에게 가장 효율적이고 최저 기대비용을 가지는&lt;/p&gt;

&lt;p&gt;이른바 “중간 지점”에서 모일 수 있도록 도움을 주는 프로그램(이하 어플)을 개발하자.&lt;/p&gt;

&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;

&lt;p&gt;현재 남녀노소 불구하고 모두가 스마트폰 하나씩은 소지하고 있는 시대에 살고 있다.&lt;/p&gt;

&lt;p&gt;한국인터넷 진흥원이 발표한 자료에 따르면, 2017년 기준 우리나라 만6세 이상 인구의 89.5%는 스마트폰을 소지하고 있다. 이처럼 대다수의 사람들이 스마트폰을 이용하고, 없어선 안 될 시대이다.&lt;/p&gt;

&lt;p&gt;이로 인해 스마트폰을 스마트하게 활용하기 위한 어플리케이션(이하 어플)의 중요성 또한 커지고 있다. 
일상생활에 있어서 스마트폰에 대한 의존도가 높아졌고, 스마트폰 이용자가 주로 이용하는 어플의 종류 중, ‘내비게이션 및 지도’ 이용률이 12.5%로서, 큰 비중에 속하는 것으로 나타났다.&lt;/p&gt;

&lt;p&gt;이처럼, GIS(Geometry Information Services-위치정보 서비스)는 스마트폰에서 없어서는 안 될 요소 중 하나이다. 위치정보 서비스를 기반으로 만들어진 어플을 찾아볼 수 있는데, 그 중 하나는 사용자들의 약속장소 정하기, 즉 중간좌표를 검색하여 장소를 정해주는 애플리케이션이다.&lt;/p&gt;

&lt;p&gt;이러한 어플을 이용해본 결과, 단지 중간좌표만을 검색하는 데에 그쳐 실질적으로 사람들이 이용하기에 불리한 면이 많았다. 심지어, IOS 어플리케이션 시장 내에서는 위치기반 중간좌표 검색 어플이 존재하지 않았다.&lt;/p&gt;

&lt;p&gt;이에 기존 어플리케이션들이 제작한 기능을 덧대어, 중간좌표 근처의 가장 가깝고, 사용자가 선택했던 원하는 장소유형을 선택하여 검색한다. 나아가 해당 지점까지 길 찾기를 수행하여 사용자들이 한 번에 이용하기 쉬운 어플을 안드로이드뿐만이 아닌 IOS로도 가능한 멀티 플랫폼을 위한 GIS 어플리케이션을 기획 및 제작하려 한다.&lt;/p&gt;

&lt;h2 id=&quot;관련-연구&quot;&gt;관련 연구&lt;/h2&gt;

&lt;p&gt;다른 지역에 살고 있는 N명의 사람들이 약속을 잡을 때, 약속 장소를 각각에게 가장 효율적이고 최저 기대비용을 가지는 이른바 “중간 지점”에서 모일 수 있도록 도움을 주는 프로그램을 안드로이드와 IOS플랫폼을 이용하여 개발하는 것이다.&lt;/p&gt;

&lt;p&gt;단지 좌표선상  중간 값을 표시하는 것에 그치는 대신, 해당 값을 가장 인근 지하철역으로 좌표를 보정해주는 기능을 추가하여 기존 어플들과의 차별성을 둔다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/GIS-App/near-subway.png&quot; alt=&quot;차별성&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모바일 애플리케이션을 만드는 방법은 네이티브 언어를 사용하는 방법이 대표적이지만 꼭 자바 또는 스위프트를 이용해야만 만들 수 있는 것은 아니다.&lt;/p&gt;

&lt;p&gt;안드로이드와 IOS 앱을 한 번에 만들 수 있는 방법도 존재하는데, 대표적으로 코르도바를 이용한 하이브리드 앱과 C#을 이용한 자마린이 있다.&lt;/p&gt;

&lt;p&gt;하이브리드 앱으로 만들 경우 구글 지도 API를 적극적으로 활용 가능하기에 GIS 기능을 손쉽게 적용할 수 있다. 하지만 하이브리드 앱의 경우 네이티브 언어로 제작한 어플리케이션보다 성능 면에서 뒤쳐지는 경우가 있다.&lt;/p&gt;

&lt;h2 id=&quot;system-architecture&quot;&gt;System-Architecture&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/GIS-App/Sys-Arc.PNG&quot; alt=&quot;시스템 구성도&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;※ 구글 Places API에서 JSON파싱을 통해 중간값 근처의 지하철을 검색해주는 시스템을 추가하여,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;기존 출시되어있는 어플들과의 차별성을 높임.&lt;/p&gt;

&lt;h2 id=&quot;타-어플과의-비교-분석&quot;&gt;타 어플과의 비교 분석&lt;/h2&gt;

&lt;p&gt;다음 표는 안드로이드 어플의 “우리어디서 만나?” 길찾기 어플과 본 논문에서 구현한 애플을 수행한 결과를 나타낸다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/GIS-App/vs-otherapp.PNG&quot; alt=&quot;타어플비교&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/GIS-App/vs-otherapp2.PNG&quot; alt=&quot;타어플비교2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;기존 어플들이 단지 중간좌표만을 검색한다면, 본 논문에서 제안한 어플은 기존 어플리케이션들이 제작한 기능을 바탕으로, 중간좌표 근처의 가장 가깝고, 사용자가 선택했던 원하는 장소유형을 선택하여 검색한다. 나아가 해당 지점까지 길 찾기를 수행하는 기능까지 추가되어 있다.&lt;/p&gt;

&lt;h3 id=&quot;시연-예시&quot;&gt;시연 예시&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/GIS-App/test1.png&quot; alt=&quot;시연 예시1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;약속을 잡을 인원수를 선택합니다. 최대 6명까지 가능합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/GIS-App/test2.png&quot; alt=&quot;시연 예시2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각각 인원의 위치를 설정합니다. Google Maps를 기반으로 검색 및 선택 가능합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/GIS-App/test3.png&quot; alt=&quot;시연 예시3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;최종 결과물입니다. 공유하기 버튼을 이용하여 SNS메신저로 전송할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;성과&quot;&gt;성과&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/GIS-App/awards.png&quot; alt=&quot;성과&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 어플리케이션은 세종대학교 5회 창의설계경진대회에서 우수상을 수상하였습니다.&lt;/p&gt;

&lt;h2 id=&quot;contact&quot;&gt;Contact&lt;/h2&gt;

&lt;p&gt;Android Source url : &lt;a href=&quot;https://github.com/seosungjoon/Center_Android&quot;&gt;https://github.com/seosungjoon/Center_Android&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;email : seojj95@naver.com&lt;/p&gt;

  &lt;p&gt;by 서성준, 남기범, 천슬별, 고정민&lt;/p&gt;

  &lt;p&gt;“본 연구는 과학기술정보통신부 및 정보통신기술진흥센터의 SW중심대학 사업의 연구결과로 수행되었음”(2015-0-00938)&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="project" /><summary type="html">GIS를 이용한 N명의 중간위치 측정 어플리케이션</summary></entry><entry><title type="html">Android</title><link href="http://localhost:4000/skills/2019/09/05/Android/" rel="alternate" type="text/html" title="Android" /><published>2019-09-05T13:30:00+09:00</published><updated>2019-09-05T13:30:00+09:00</updated><id>http://localhost:4000/skills/2019/09/05/Android</id><content type="html" xml:base="http://localhost:4000/skills/2019/09/05/Android/">&lt;p&gt;Android Studio를 사용하여 안드로이드 모바일 어플리케이션 개발을 공부하고 있습니다.&lt;/p&gt;

&lt;p&gt;Android는 배워야 할 양이 방대하여 기초부터 천천히 배우고 있으며, 어느 정도 지식을 쌓은 뒤에 직접 실습해 보았습니다.&lt;/p&gt;

&lt;h3 id=&quot;gis-application-design-and-implementation&quot;&gt;GIS Application design and Implementation&lt;/h3&gt;

&lt;p&gt;안드로이드의 기본 지식을 얼마나 잘 활용할 수 있는지 확인할 수 있는 첫번째 어플리케이션이자 프로젝트입니다.&lt;/p&gt;

&lt;p&gt;GIS(Geometry Information Services)와 Google Places API를 활용하여&lt;/p&gt;

&lt;p&gt;위치값과 지도 정보를 활용하여 사용자에게 보여주는 어플리케이션입니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://seosungjoon.github.io/project/2019/09/06/GISApp/&quot;&gt;프로젝트설명보러가기&lt;/a&gt; / &lt;a href=&quot;https://github.com/seosungjoon/Center_Android&quot;&gt;소스보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이를 통해 외부 API를 사용하는 방법과 GPS, JSON파싱을 통한 지하철 검색 시스템을 구현할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;bookprice&quot;&gt;BookPrice&lt;/h3&gt;

&lt;p&gt;IT 트렌드 중 가장 핫하고 발전 가능성이 무한한 머신러닝.딥러닝 기술을 이용하여 제작한 중고책 거래가 자동측정 모듈입니다.&lt;/p&gt;

&lt;p&gt;머신러닝 API인 Google Cloud API의 Object Detection과 Recognized Text 기능을 이용하였고,&lt;/p&gt;

&lt;p&gt;자체 Linux 서버를 이용하여 클라이언트-서버 구조를 통해 서버와의 통신기술을 익혔습니다.&lt;/p&gt;

&lt;p&gt;[프로젝트설명보러가기] *(링크추가요망) / &lt;a href=&quot;https://github.com/seosungjoon/BookPrice&quot;&gt;소스보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이를 통해 서버-클라이언트 구조를 이해하고, 활용할 수 있으며,&lt;/p&gt;

&lt;p&gt;서버와의 HTTP통신, HW제어(카메라) 및 Async(비동기) 구조에 대해 잘 이해할 수 있었습니다.&lt;/p&gt;

&lt;h3 id=&quot;classicbook&quot;&gt;ClassicBook&lt;/h3&gt;

&lt;p&gt;세종대학교 Capstone(산학협력프로젝트) 팀프로젝트로 주어진 과제입니다.
세종대학교 고전독서 인증 관련하여 사용자의 편의성에 맞추어 제작된&lt;/p&gt;

&lt;p&gt;어플리케이션입니다.&lt;/p&gt;

&lt;p&gt;주로 서버-클라이언트 통신을 통해 데이터를 파싱, 로그인 기능을 구현하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://seosungjoon.github.io/project/2019/09/06/ClassicBook/&quot;&gt;프로젝트설명보러가기&lt;/a&gt; / &lt;a href=&quot;https://github.com/seosungjoon/ClassicBook&quot;&gt;소스보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이를 통해 JSOUP를 통한 HTML 파싱을 할 수 있으며, GSON을 이용하여&lt;/p&gt;

&lt;p&gt;JAVA&amp;lt;-&amp;gt;JSON으로 변환시킬 수 있습니다.&lt;/p&gt;

&lt;p&gt;또한 외부 기타 라이브러리를 적용하여 UI/UX를 변경할 수 있습니다.&lt;/p&gt;</content><author><name></name></author><category term="skills" /><summary type="html">Android Studio를 사용하여 안드로이드 모바일 어플리케이션 개발을 공부하고 있습니다.</summary></entry><entry><title type="html">C,C++,C#</title><link href="http://localhost:4000/skills/2019/09/05/C,C++,C/" rel="alternate" type="text/html" title="C,C++,C#" /><published>2019-09-05T13:08:12+09:00</published><updated>2019-09-05T13:08:12+09:00</updated><id>http://localhost:4000/skills/2019/09/05/C,C++,C</id><content type="html" xml:base="http://localhost:4000/skills/2019/09/05/C,C++,C/">&lt;p&gt;C언어는 제가 컴퓨터공학과에 처음 입문했을 당시부터 배웠던 프로그래밍 언어입니다.&lt;/p&gt;

&lt;p&gt;C를 통해 프로그래밍 언어에 대한 기반을 다지며,&lt;/p&gt;

&lt;p&gt;점차 C++, C#등 다른 프로그래밍 언어들도 학습해 나갔습니다.&lt;/p&gt;

&lt;p&gt;C,C++,C# 모두 Visual Studio 에서 코딩을 하고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;hello-world&quot;&gt;Hello World!&lt;/h2&gt;

&lt;p&gt;printf(“Hello World!”);에서부터&lt;/p&gt;

&lt;p&gt;cout « “Hello World” « endl; 와&lt;/p&gt;

&lt;p&gt;Console.WriteLine(“Hello World!”); 을 코딩하면서 점진적으로 프로그래밍 언어의&lt;/p&gt;

&lt;p&gt;구조와 절차지향, 객체지향에 대한 지식을 쌓아갔습니다.&lt;/p&gt;

&lt;p&gt;C언어로는 포인터, 배열, 파일입출력에 대해 잘 이해하고 있으며,&lt;/p&gt;

&lt;p&gt;간단한 콘솔 관리 프로그램 등을 제작해 보았습니다.&lt;/p&gt;

&lt;p&gt;C++언어의 namespace에 대해 이해하고 있으며 new와 delete를 통한 메모리 동적 할당 해제,&lt;/p&gt;

&lt;p&gt;all by reference를 적용할 수 있으며, STL 반복자에 대한 개념을 학습중에 있습니다.&lt;/p&gt;

&lt;p&gt;C#언어의 가지고 있는 지식을 통하여 윈도우 Form을 통한 카드게임을 제작해 보았으며&lt;/p&gt;

&lt;p&gt;다형성, 제네릭, 인덱서, 인터페이스, 델리게이터 등&lt;/p&gt;

&lt;p&gt;C#에 필요한 기본 지식들을 잘 이해하고 적용할 수 있습니다.&lt;/p&gt;</content><author><name></name></author><category term="skills" /><summary type="html">C언어는 제가 컴퓨터공학과에 처음 입문했을 당시부터 배웠던 프로그래밍 언어입니다.</summary></entry><entry><title type="html">Java</title><link href="http://localhost:4000/skills/2019/09/05/java/" rel="alternate" type="text/html" title="Java" /><published>2019-09-05T12:30:00+09:00</published><updated>2019-09-05T12:30:00+09:00</updated><id>http://localhost:4000/skills/2019/09/05/java</id><content type="html" xml:base="http://localhost:4000/skills/2019/09/05/java/">&lt;p&gt;자바는 고등학교 시절부터 가장 흥미를 가지고 있었고 Android개발이라는 것을
알려준 프로그래밍 언어입니다.&lt;/p&gt;

&lt;p&gt;대학교 수업에서는 이클립스를 통해 Java 코딩을 진행하였으나&lt;/p&gt;

&lt;p&gt;Java와 함께 Android개발을 독학하고 있던 저에게는 IntelliJ를 사용하는 것이 더 편하여&lt;/p&gt;

&lt;p&gt;이후로 쭉 IntelliJ를 사용중입니다.&lt;/p&gt;

&lt;p&gt;객체지향언어의 특징에 대해 잘 이해하고 있으며 이를 활용하여&lt;/p&gt;

&lt;p&gt;오버로딩, 오버라이딩을 적용할 수 있으며 implements와 extends의 차이점을 알고&lt;/p&gt;

&lt;p&gt;상황에 맞게 적절히 구현할 수 있습니다.&lt;/p&gt;

&lt;p&gt;자바의 Collection 프레임워크에 대해 이해하고 있으며 이를 상황에 맞게 적절히 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;※ Collection 프레임워크?&lt;/p&gt;

&lt;p&gt;Java에서 다수의 데이터를 효과적으로 제어하기 위해 표준화된 방법을 제공하는 객체의 집합입니다.&lt;/p&gt;

&lt;p&gt;List, ,Set, Map 등이 대표적인 예입니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.opentutorials.org/course/1223/6446&quot;&gt;참고자료&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;try-catch-finally를 활용하여 예외 처리를 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;또한 Java 8에서 새롭게 등장한 람다 표현식 기능을 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;가장 오랫동안 사용하고, 많이 사용한 익숙한 언어이기 때문에 대부분의 알고리즘 문제를 풀 때 주로 자바를 활용하고 있습니다.&lt;/p&gt;

&lt;p&gt;그외에 제네릭, 참조, enum 타입 등을 이해하고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;java-8&quot;&gt;Java 8&lt;/h2&gt;

&lt;p&gt;Java에서 가장 혁신적인 변화가 일어난 8 버전을 이해하고 실제 코딩으로 적용해보려고 노력하고 있습니다.&lt;/p&gt;

&lt;p&gt;Java 8의 가장 큰 특징은 함수형 언어가 가지고 있는 Lambda식을 Java에서 적용할 수 있다는 점과 Stream API 일 것입니다.&lt;/p&gt;

&lt;p&gt;저는 FunctionalInterface를 통해 Lambda식을 적용하는 방법과&lt;/p&gt;

&lt;p&gt;Collection 객체에서 Stream을 사용하는 방법에 큰 관심을 가지고 학습, 적용하고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;android&quot;&gt;Android&lt;/h2&gt;

&lt;p&gt;Kotlin이 공개되고 공식 언어로 채택되기 전부터, 안드로이드 모바일 어플리케이션 개발에 관심을 가지고 있었기 때문에,&lt;/p&gt;

&lt;p&gt;Java를 학교에서 처음 배우기 시작할 때부터 안드로이드 개발에 대한 공부도 병행하였습니다.&lt;/p&gt;

&lt;p&gt;하지만, 제가 가지고 있는 안드로이드 및 자바의 이해도와, 지식의 수준이 어느 정도인지 가늠하기 어려웠기 때문에,&lt;/p&gt;

&lt;p&gt;학교 내에서 진행하는 프로젝트나 대회 등을 나가 수상하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://seosungjoon.github.io/category/project/&quot;&gt;프로젝트보기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;안드로이드 관련 내용은 별도의 페이지로 후술하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://seosungjoon.github.io/category/skills/Android&quot;&gt;자세히보러가기&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="skills" /><summary type="html">자바는 고등학교 시절부터 가장 흥미를 가지고 있었고 Android개발이라는 것을 알려준 프로그래밍 언어입니다.</summary></entry><entry><title type="html">DB</title><link href="http://localhost:4000/skills/2019/09/05/DB/" rel="alternate" type="text/html" title="DB" /><published>2019-09-05T12:00:00+09:00</published><updated>2019-09-05T12:00:00+09:00</updated><id>http://localhost:4000/skills/2019/09/05/DB</id><content type="html" xml:base="http://localhost:4000/skills/2019/09/05/DB/">&lt;p&gt;데이터베이스 수업을 통해 SQL과 DBMS에 대하여 교육받았습니다.&lt;/p&gt;

&lt;p&gt;처음 접한 DB는 Oracle 11g (수업을 통해 처음 입문)이었습니다.&lt;/p&gt;

&lt;p&gt;데이터베이스 수업때 이론및 실습수업과 함께 프로젝트를 병행하여&lt;/p&gt;

&lt;p&gt;캠핑카 차량 렌트 종합관리 시스템이라는 프로젝트 과제를 제작하였습니다.&lt;/p&gt;

&lt;p&gt;또한, Capstone 수업에서 Linux서버 내에서 MySQL을 이용한 프로젝트를&lt;/p&gt;

&lt;p&gt;진행하였습니다.&lt;/p&gt;

&lt;h3 id=&quot;mysql&quot;&gt;MySQL&lt;/h3&gt;

&lt;p&gt;MySQL로 DDL과 DML을 사용하여 스키마 조작 및 데이터 조회를 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;특히 Node.js에서 Linux 서버를 통해 DB 테이블에 접근하는 코드를 작성해 보았습니다.&lt;/p&gt;

&lt;p&gt;아래는 Linux 서버 내에서 mysql를 로드하여 Application에서 예약등록 및 취소, 수정 작업을 하는 코드입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;con&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o69&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(?,?,?,?,?,?)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;	
	&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hakgi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			  &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'예약정보가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없어서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;예약정보&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;저장완료'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		  	&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data123&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		  		&lt;span class=&quot;nl&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;	 	
		  	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		  	&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data123&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deletesql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;이하&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;동일하거나&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;비슷&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;MySQL에 접속하기 위해 host에 서버ip 혹은 url을 입력해 줘야하지만,&lt;/p&gt;

&lt;p&gt;해당 코드는 node.js에서 조작되며 이는 AWS EC2 리눅스 서버에서 동작하기 때문에&lt;/p&gt;

&lt;p&gt;별도의 서버 ip가 필요하지 않았습니다.&lt;/p&gt;</content><author><name></name></author><category term="skills" /><summary type="html">데이터베이스 수업을 통해 SQL과 DBMS에 대하여 교육받았습니다.</summary></entry></feed>